var app=angular.module("App",[]);
app.controller("ProcessorController",function($scope, $interval, $http){

  $scope.header='Number of Events Generated By Different Products';

  $scope.eventsPerProducts={};
  $scope.nulltimestamps={};
  $scope.eventCount=0;
  $scope.duplicateEvents={};
  $scope.duplicateEventsCounter=0;
  $scope.eventsDayAndTimeObj={};
  $scope.completed=false;
  $scope.crash_date_created={};


  //init map
      var center = new google.maps.LatLng(37.4419, -122.1419);

        $scope.map = new google.maps.Map(document.getElementById('map_canvas'), {
          zoom: 3,
          center: center,
          mapTypeId: google.maps.MapTypeId.ROADMAP
        });



        $scope.addMarkers=function(){
          var markers = [];

          $.each($scope.eventsPerProducts, function(index, product){

            for (var i = 0; i < product.locations.length; i++) {

              var latLng = new google.maps.LatLng( product.locations[i][0],
                  product.locations[i][1]);
              var marker = new google.maps.Marker({
                position: latLng
              });
              markers.push(marker);
            }



          });


          var markerCluster = new MarkerClusterer($scope.map, markers);

        }

        $scope.crashDate=function () {
          $("#crash_date").html('<canvas id="canvas_crash_date" height="450" width="'+$("body").width()+'"></canvas>')
          $scope.header='Number of Events Generated By Different Products';
          //load the graph
          var datelist=[];
          var crashes=[];

            var unsorted=[];

          $.each($scope.crash_date_created, function(date, count){




            unsorted.push({date:date,count:count})


          });

         var sorted=unsorted.sort(function(a,b){

            return new Date(a.date).getTime()-new Date(b.date).getTime();
          })

          for (var i = 0; i < sorted.length; i++) {
            datelist.push(sorted[i].date);
            crashes.push(sorted[i].count);
          }






          var crashDateData= {
                    "labels": datelist,
                    "datasets": [
                        {
                            "label": datelist,
                            "data": crashes,
                            fillColor: "#ff9900"
                        }
                    ]
                };
                new Chart(document.getElementById("canvas_crash_date").getContext("2d")).Bar(crashDateData, {
                                animationSteps: 0,
                                legend: true,

                                inGraphDataShow: true,
                                graphTitle: "Crashes on different dates",
                                animationEasing: 'easeInOutQuart'});


        };


  $scope.mainViz=function () {
    $("#div_event_counts_per_product").html('<canvas id="canvas_div_event_counts_per_product" height="450" width="450"></canvas>')
    $scope.header='Number of Events Generated By Different Products';
    //load the graph
    var productName=[];
    var eventsProduced=[];
    var first_time_launch=[];
    $.each($scope.eventsPerProducts, function(index, product){
      productName.push(index);
      eventsProduced.push(product.type.launch);
      first_time_launch.push(product.first_time_launch);

    });



    $scope.eventPerProduct = {
              "labels": productName,
              "datasets": [
                  {
                      "label": productName,
                      "data": eventsProduced,
                      fillColor: "#ff9900"
                  },{
                      "label": productName,
                      "data": first_time_launch,
                      fillColor: "gray"
                  }
              ]
          };
          new Chart(document.getElementById("canvas_div_event_counts_per_product").getContext("2d")).Bar($scope.eventPerProduct, {
                          animationSteps: 0,
                          legend: true,

                          inGraphDataShow: true,
                          graphTitle: "Total Launches vs First Time Launches",
                          animationEasing: 'easeInOutQuart'});


  };

  $scope.timestampsViz=function(){
    $("#div_event_counts_per_type").html('<canvas id="canvas_event_counts_per_type" height="450" width="450"></canvas>')

    var productName=[];
    var eventsProduced=[];
    var nulltimestamps=[];
    $.each($scope.eventsPerProducts, function(index, product){
      productName.push(index);
      nulltimestamps.push(product.undefined_timestamps);

    });

    //load the graph
    $scope.nulltimestamps = {
              "labels": productName,
              "datasets": [
                  {
                      "label": productName,
                      "data": nulltimestamps,
                      fillColor: "blue"
                  }

              ]
          };
          new Chart(document.getElementById("canvas_event_counts_per_type").getContext("2d")).Bar($scope.nulltimestamps, {
                          animationSteps: 0,
                          legend: true,

                          inGraphDataShow: true,
                          graphTitle: "Undefined Timestamps",
                          animationEasing: 'easeInOutQuart'});


  };

  $scope.eventsPerDifferentTypes=function(){
    $("#div_event_per_types").html('<canvas id="canvas_event_per_types" height="450" width="'+$("body").width()+'"></canvas>')
    var typesHashMap={};
    var types=[];
    var typesCount=[];


    $.each($scope.eventsPerProducts, function(product_name, product){
      $.each(product.type, function(type,count){
        if(typesHashMap[type] ==  undefined)
          typesHashMap[type]=count;
        else {
          typesHashMap[type]+=count;
        }
      })

    });

    var unsortedTypes=[];

    $.each(typesHashMap, function (type, count) {
      unsortedTypes.push({type:type, count:count});
    });

    sortedTypes=unsortedTypes.sort(function(type1, type2){
      return type2.count-type1.count;
    })

    $.each(sortedTypes, function (index, type) {
      types.push(type.type);
      typesCount.push(type.count);
    });



    //load the graph
    var eventstypesCounts = {
              "labels": types,
              "datasets": [
                  {
                      "label": types,
                      "data": typesCount,
                      fillColor: "green"
                  }

              ]
          };
          new Chart(document.getElementById("canvas_event_per_types").getContext("2d")).Bar(eventstypesCounts, {
                          animationSteps: 0,
                          legend: true,

                          inGraphDataShow: true,
                          graphTitle: "Event count per Types",
                          animationEasing: 'easeInOutQuart'});


  };

  $scope.crashesCountPerModels={};

  $scope.crashesPerModels=function(){
    $("#div_crash_count_per_model").html('<canvas id="canvas_crash_count_per_model" height="450" width="'+$("body").width()+'"></canvas>')

    var models=[];
    var modelscounts=[];
    var modelCrashHashMap=[];

//console.log($scope.crashesCountPerModels);




    $.each($scope.crashesCountPerModels, function(model, crashes){

      modelCrashHashMap.push({model:model,crashes:crashes});

    });

    modelCrashHashMap.sort(function(model1, model2) {
      return model2.crashes-model1.crashes;
    })

    $.each(modelCrashHashMap, function(index, device){

    models.push(device.model);
    modelscounts.push(device.crashes);

    });


    //load the graph
    var crashCounts = {
              "labels": models,
              "datasets": [
                  {
                      "label": models,
                      "data": modelscounts,
                      fillColor: "red"
                  }

              ]
          };
          new Chart(document.getElementById("canvas_crash_count_per_model").getContext("2d")).Bar(crashCounts, {
                          animationSteps: 0,
                          legend: true,

                          inGraphDataShow: true,
                          graphTitle: "Crash Events per Device Model",
                          animationEasing: 'easeInOutQuart'});


  };

$scope.eventsDayAndTime=function(){

    $("#div_event_per_day_of_week").html('<canvas id="canvas_event_per_day_time" height="450" width="'+$("body").width()+'"></canvas>')
    $("#div_event_per_hour_of_day").html('<canvas id="canvas_event_per_hour_of_day" height="450" width="'+$("body").width()+'"></canvas>')

    $scope.header='Total Events Received per Day of the Week';
    //load the graph
    var eventDay=[];
    var eventCount=[];

//aggreate hours for each day

    var eventHour={};
    var eventHourCount=[];





    $.each($scope.eventsDayAndTimeObj, function(index, event){
      eventDay.push(index);
      eventCount.push(event.events);


      $.each(event.hours, function(hour, count){
        if(eventHour[hour] ==  undefined){
          eventHour[hour]=0;
        }

        eventHour[hour]+=count;

      });


    });

    var hours=[];
    var hourCounts=[];
    $.each(eventHour, function(index, count){
        hours.push(index);
        hourCounts.push(count);
    });

    var eventPerDay = {
              "labels": eventDay,
              "datasets": [
                  {
                      "label": eventDay,
                      "data": eventCount,
                      fillColor: "#ff00ff"
                  }
              ]
          };

          var eventPerHour = {
                    "labels": hours,
                    "datasets": [
                        {
                            "label": hours,
                            "data": hourCounts,
                            fillColor: "brown"
                        }
                    ]
                };



          new Chart(document.getElementById("canvas_event_per_day_time").getContext("2d")).Bar(eventPerDay, {
                          animationSteps: 0,
                          legend: true,

                          inGraphDataShow: true,
                          graphTitle: "Total Events Received per Day of the Week",
                          animationEasing: 'easeInOutQuart'});

                          new Chart(document.getElementById("canvas_event_per_hour_of_day").getContext("2d")).Bar(eventPerHour, {
                                          animationSteps: 0,
                                          legend: true,

                                          inGraphDataShow: true,
                                          graphTitle: "Total Events Received per Hour of the day",
                                          animationEasing: 'easeInOutQuart'});

};



  $scope.intervalVar=$interval(function () {
    $scope.connectServer();
  }, 5000);

  $scope.connectServer=function(){
    $http.get("/streaming").success(function(response){
      $scope.crash_date_created=response.crash_date_created;
      $scope.eventCount=response.eventCount;
      $scope.completed=response.completed;
      $scope.eventsDayAndTimeObj=response.eventsDayAndTime;
      $scope.eventsPerProducts=response.eventsPerProducts;
      $scope.crashesCountPerModels=response.crashesCountPerModels;

    //  console.log($scope.eventCount);
       $scope.mainViz();
       $scope.timestampsViz();
       $scope.eventsDayAndTime();
       $scope.crashesPerModels();
       $scope.eventsPerDifferentTypes();
       $scope.crashDate();

      if($scope.completed ==  true)
        {
        //  console.log(response);
          $scope.addMarkers();
          $interval.cancel($scope.intervalVar);
        }

    });

  };

$scope.connectServer();
});
